

resource "azurerm_public_ip" "piplinuxserver" {
  allocation_method   = "Static"
  location            = var.location
  name                = "pip-vm-linuxServer"
  resource_group_name = local.resgrp
  sku                 = "Standard"
  depends_on = [
    azurerm_resource_group.resgrp,
  ]

  tags = local.tags
}


resource "azurerm_linux_virtual_machine" "vm-linuxserver" {
  admin_username        = var.adminuser
  location              = var.location
  name                  = "vm-LinuxServer"
  network_interface_ids = [azurerm_network_interface.vm-linuxserver-nic.id]
  resource_group_name   = local.resgrp
  size                  = var.linuxsku

  admin_ssh_key {
    public_key = var.adminsshkey
    username   = var.adminuser
  }

  #admin_ssh_key {
  #  username   = var.adminuser
  #  public_key = tls_private_key.globalsshkey.public_key_openssh
  #}

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {                # "Canonical:UbuntuServer:18.04-LTS:latest"
    publisher = local.linuxskulist[0]
    offer     = local.linuxskulist[1]
    sku       = local.linuxskulist[2]
    version   = local.linuxskulist[3]
  }

  #user_data = "${base64encode(local.setup-vm-utilsvr)}"

  custom_data = filebase64("${path.module}/custom_data/vm-linuxserver.txt")
  depends_on = [
    azurerm_network_interface.vm-linuxserver-nic,
    azurerm_public_ip.piplinuxserver,
    tls_private_key.globalsshkey
  ]

  tags = local.tags
}

resource "azurerm_network_interface" "vm-linuxserver-nic" {
  location            = var.location
  resource_group_name = local.resgrp
  name                = "vm-linuxserver-nic"
  ip_configuration {
    name                          = "ipconfigvm-linuxserver"
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.piplinuxserver.id
    subnet_id                     = azurerm_subnet.subnetvms.id
  }
  depends_on = [
    azurerm_public_ip.piplinuxserver,
    azurerm_subnet.subnetvms,
  ]

 tags = local.tags
}



# Security Groups

resource "azurerm_network_security_group" "nsgvmlinux" {
  location            = "uksouth"
  name                = "nsg-vm-linuxserver"
  resource_group_name = local.resgrp
  depends_on = [
    azurerm_resource_group.resgrp,
  ]
  
  tags = local.tags
}

resource "azurerm_network_interface_security_group_association" "nsgass-vm-linuxsvr" {
  network_interface_id      = azurerm_network_interface.vm-linuxserver-nic.id
  network_security_group_id = azurerm_network_security_group.nsgvmlinux.id
  depends_on = [
    azurerm_network_interface.vm-linuxserver-nic,
    azurerm_network_security_group.nsgvmlinux,
  ]
}

resource "azurerm_network_security_rule" "nsgvmutil-22internet" {
  access                      = "Allow"
  destination_address_prefix  = "*"
  destination_port_range      = "22"
  direction                   = "Inbound"
  name                        = "AllowSSHfromInternet"
  network_security_group_name = azurerm_network_security_group.nsgvmlinux.name
  priority                    = 100
  protocol                    = "Tcp"
  resource_group_name         = local.resgrp
  source_address_prefix       = "${var.userexternalip}/32" 
  source_port_range           = "*"
  depends_on = [
    azurerm_network_security_group.nsgvmlinux,
  ]

}

# For certbot testing

resource "azurerm_network_security_rule" "nsgvmlinux-80internet" {
  access                      = "Allow"
  destination_address_prefix  = "*"
  destination_port_range      = "80"
  direction                   = "Inbound"
  name                        = "AllowHTTPfromInternet"
  network_security_group_name = azurerm_network_security_group.nsgvmlinux.name
  priority                    = 110
  protocol                    = "Tcp"
  resource_group_name         = local.resgrp
  source_address_prefix       = "Internet"
  source_port_range           = "*"
  depends_on = [
    azurerm_network_security_group.nsgvmlinux,
  ]
}

resource "azurerm_network_security_rule" "nsgvmlinux-443internet" {
  access                      = "Allow"
  destination_address_prefix  = "*"
  destination_port_range      = "443"
  direction                   = "Inbound"
  name                        = "AllowHTTPfromInternet"
  network_security_group_name = azurerm_network_security_group.nsgvmlinux.name
  priority                    = 120
  protocol                    = "Tcp"
  resource_group_name         = local.resgrp
  source_address_prefix       = "Internet"
  source_port_range           = "*"
  depends_on = [
    azurerm_network_security_group.nsgvmlinux,
  ]
}

resource "azurerm_network_security_rule" "nsgvmlinux-denyall" {
  access                      = "Deny"
  destination_address_prefix  = "*"
  destination_port_range      = "*"
  direction                   = "Inbound"
  name                        = "DenyAll"
  network_security_group_name = azurerm_network_security_group.nsgvmlinux.name
  priority                    = 999
  protocol                    = "*"
  resource_group_name         = local.resgrp
  source_address_prefix       = "*"
  source_port_range           = "*"
  depends_on = [
    azurerm_network_security_group.nsgvmlinux,
  ]
}
